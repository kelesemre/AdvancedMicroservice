docker run -d -p 6379:6379 --name aspnetrun-redis redis
docker ps
docker logs -f <name of the container>
docker exec -it <container_name> /bin/bash  + redis-cli   --> locating inside container
docker rmi 0f45
docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d
docker-compose -f docker-compose.yml -f docker-compose.override.yml up --build    --> if we edit dockerfiles or yml files. Rebuilding images
docker-compose -f docker-compose.yml -f docker-compose.override.yml down
---
grpc
-html/2 protocol based
-high speed
-low latency
-syncron communication
-cross language support


Basket MS ---> Checkout method --> Discount.grpc --> Publish to RabbitMQ --> Ordering.API --> consume the message

In memory Database
public void ConfigureDatabases(IServiceCollection services)
{
    // use in-memory database
    services.AddDbContext<AspnetRunContext>(c =>
        c.UseInMemoryDatabase("AspnetRunConnection")
        .UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking));

    //// use real database
    //services.AddDbContext<AspnetRunContext>(c =>
    //    c.UseSqlServer(Configuration.GetConnectionString("AspnetRunConnection"))
    //    .UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking));
}



